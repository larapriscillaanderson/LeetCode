LeetCode Solutions and Notes

Day 48 of 2025, this is my LeetCode Journal Entry where I will contribute my notes and solutions for LeetCode problems.

February 17, 2025

LeetCode Problem: Move Zeroes
Link: https://leetcode.com/problems/move-zeroes/

Level: Easy

**Notes:**

Goal: Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

- initial thoughts: need to move all 0s to the end without changing the order of non-zero numbers
- the question requires an in-place solution, we cannot use extra space like making a new array
- can solve using a two pointer approach
- use a nonZeroIndex pointer to track where the next non-zero number should go
- loop through the array
- if nums[i] is non-zero, swap it with nums[nonZeroIndex]
- move nonZeroIndex forward
- once done, all non-zero numbers will be shifted to the left, 
and remaining spaces will be filled with 0s

Time Complexity:

- Iterate through the array once with a single for loop â†’ O(n).
- Inside the loop, at most one swap operation happens for each non-zero element, 
which is O(1).
- Since swapping happens at most n times, the total time complexity remains O(n).
- Summary: The total time complexity is O(n).
