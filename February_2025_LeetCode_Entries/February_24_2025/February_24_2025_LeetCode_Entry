LeetCode Solutions and Notes

Day 54 of 2025, this is my LeetCode Journal Entry where I will contribute my notes and solutions for LeetCode problems.

February 24, 2025

LeetCode Problem: Find the Difference
Link: https://leetcode.com/problems/find-the-difference/

Level: Easy

**Notes:**

Goal: You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

- initial thoughts: t string contains all the letters of s plus one more letter, random spot
- need to find the extra letter
- could use a hash map approach to count character frequencies in s
- loop through t, decrement counts from hash map
- the letter with a negative or missing count is the extra letter
- key idea: iterate through string t, checking if character count goes below zero

Time Complexity:

- Building the frequency dictionary requires looping through s once.
- Adding each character to the dictionary will bring this time to O(n).
- Looping through t once, adjusting character counts in the dictionary is also O(n).
- Summary: Since both loops run in a linear time, the total time complexity is O(n).

Space Complexity:

- Since the strings are working with letters (a-z), the maximum number of unique keys
in the dictionary is 26 (constant).
- Even if string 's' is long, will never store more than 26 unique letters.
- Summary: The total space complexity is O(1).

Solution: see attached .py file (Python 3)

Revisit? No
