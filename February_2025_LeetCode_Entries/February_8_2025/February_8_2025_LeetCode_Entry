LeetCode Solutions and Notes

Day 39 of 2025, this is my LeetCode Journal Entry where I will contribute my notes and solutions for LeetCode problems.

February 8, 2025

LeetCode Problem: First Unique Character in a String REVISITED
Link: https://leetcode.com/problems/first-unique-character-in-a-string/

Level: Easy

**Notes:**

Goal: Given a string s, find the first non-repeating character in it and return its index. 
If it does not exist, return -1.

- initial thoughts: need to find the first non-repeating character in a string
- hash map (dictionary) approach could be used for counting character occurrences 
- since the goal is to find the first unique character, must preserve order
- iterate through the string once to build a frequency map
- iterate again to check the first character with a count of 1
- initialize an empty dictionary to store character counts
- iterate through the string and update counts in the dictionary
- if the character is not in the dictionary, add it with a count of 1
- otherwise, increment its count
- iterate through the string again while maintaining order
- use enumerate() to track both index and character
- if the character's count is 1, return its index
- if no unique character exists, return -1

Time Complexity: 

- Iterating through s to populate character_count takes O(n).
- Iterating through s again to find the first unique character takes O(n), worst case.
- Summary: The total time complexity is O(n) + O(n) = O(n).

Space Complexity:

- Dictionary character_count stores counts for up to n unique characters, 
leading to O(n), worst case.
- Summary: The total space complexity is O(n).

Solution: see attached .py file (Python 3)

Revisit? No
