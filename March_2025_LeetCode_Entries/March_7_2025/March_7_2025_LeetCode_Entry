# LeetCode
LeetCode Solutions and Notes

Day 66 of 2025, this is my LeetCode Journal Entry where I will contribute my notes and solutions for LeetCode problems.

March 7, 2025

LeetCode Problem: Reverse String
Link: https://leetcode.com/problems/reverse-string/

Level: Easy

**Notes:**

Goal: Write a function that reverses a string. The input string is given as an array of characters s.

You must do this by modifying the input array in-place with O(1) extra memory.

- initial thoughts: given a list of characters, not a string
- must reverse the list in place, so can't use built in functions .reverse() or [::-1]
to create a new list
- key idea: strings are immutable in Python, but lists are mutable, can modify s directly
- initial approach: using two pointers is an efficient to swap elements without extra space
- could use two pointers, one at the beginning (left) and one at the end (right)
- swap characters at left and right
- move left forward and right backward until they meet in the middle

Time Complexity:

- The function uses a while loop that runs until the left pointer meets the right pointer.
- The loop runs through half the number of elements in the list, as the left pointer moves 
forward and the right pointer moves backward at each iteration.
- For a list of length n, the number of iterations is approximately n / 2.
- Swapping takes constant time per iteration, and moving the pointers also takes constant time.
- Summary: The total time complexity is linear O(n).

Space Complexity:

- The function modifies the list in place, there is no extra space used to store a new list.
- Only using two variables left and right, which are both constant in terms of space.
- Summary: The total space complexity is constant O(1).

Solution: see attached .py file (Python 3)

Revisit? Yes
