# LeetCode
LeetCode Solutions and Notes

Day 79 of 2025, this is my LeetCode Journal Entry where I will contribute my notes and solutions for LeetCode problems.

March 20, 2025

LeetCode Problem: Goat Latin
Link: https://leetcode.com/problems/goat-latin/

Level: Easy

**Notes:**

Goal: You are given a string sentence that consist of words separated by spaces. 
Each word consists of lowercase and uppercase letters only.

We would like to convert the sentence to "Goat Latin" (a made-up language similar to Pig Latin.) 
The rules of Goat Latin are as follows:

If a word begins with a vowel ('a', 'e', 'i', 'o', or 'u'), append "ma" to the end of the word.
For example, the word "apple" becomes "applema".
If a word begins with a consonant (i.e., not a vowel), remove the first letter and append it to the end, then add "ma".
For example, the word "goat" becomes "oatgma".
Add one letter 'a' to the end of each word per its word index in the sentence, starting with 1.
For example, the first word gets "a" added to the end, the second word gets "aa" added to the end, and so on.
Return the final sentence representing the conversion from sentence to Goat Latin.

- initial thoughts: split the sentence into words and apply the rules accordingly
- if a word starts with a vowel (a, e, i, o, u), add "ma" to the end of the word
- if a word starts with a consonant, move the first letter to the end of the word and add "ma"
- after each word, add an additional "a" for each wordâ€™s position in the sentence
- join the words back together in a sentence

Time Complexity:

- Summary: Each word is processed individually, so the total time complexity is O(m * k), 
where m is the number of words and k is the average length of a word in the sentence.

Space Complexity:

- Words list (words) takes O(m) space, where m is the number of words in the sentence.
- Transformed words list (transformed_words) also takes O(m * k) space since each word 
in the transformed list can have up to k characters.
- Summary: The total space complexity is O(m * k), dominated by the space required to store the words and their transformed versions.

Solution: see attached .py file (Python 3)

Revisit? No
