# LeetCode
LeetCode Solutions and Notes

Day 10 of 2025, this is my LeetCode Journal Entry where I will contribute my notes and solutions for LeetCode problems.

January 10, 2025

LeetCode Problem: Maximum Number of Words Found in Sentences
Link: https://leetcode.com/problems/maximum-number-of-words-found-in-sentences/  

Level: Easy

**Notes:**

Goal: A sentence is a list of words that are separated by a single space with no leading or trailing spaces.

You are given an array of strings sentences, where each sentences[i] represents a single sentence.

Return the maximum number of words that appear in a single sentence.

- initial thoughts: since words are separated by spaces, it is possible to split the sentence into a list of words
- the number of words is then going to be the length of that list
- keep track of the maximum word count
- return the highest word count at the end
- key operation: since words in a sentence are separated by a single space, 
use .split(" ") to break it into a list of words

Time Complexity:

- Splitting a sentence (sentence.split(" ")) takes O(n), where n is the number of characters in the sentence.
- Looping through all sentences takes O(m), where m is the number of sentences.
- In the worst case, all characters are processed in all sentences â†’ O(m * n).
- Summary: Since we do O(n) work for each of the M sentences, the overall complexity is:
O(m * n).

Space Complexity:

- The input sentences is given, and storing integers does not count toward extra space usage.
- The .split(" ") operation can have a worst case, if a sentence has n words, 
the list has n elements.
- Summary: That total space complexity is O(n), where n is the max number of words in a single sentence.

Solution: see attached .py file (Python 3)

Revisit? Yes
