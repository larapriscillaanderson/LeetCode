# LeetCode
LeetCode Solutions and Notes

Day 6 of 2025, this is my LeetCode Journal Entry where I will contribute my notes and solutions for LeetCode problems.

January 6, 2025

LeetCode Problem: PlusOne
Link: https://leetcode.com/problems/plus-one/  

Level: Easy

**Notes:**

Goal: You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

Increment the large integer by one and return the resulting array of digits.

- initialize the carry, start with a value of 1
- iterates backwards by traversing the digits array from the last digit (least significant) to the first (most significant)
- add the carry to the current digit.
- update the current digit to the remainder when divided by 10 (digits[i] = total % 10)
- update the carry to the quotient when divided by 10 (carry = total // 10)
- this determines if there’s an overflow to handle in the next significant digit
- if there’s still a carry left after processing all digits, insert it at the beginning of the array
- the updated digits array represents the incremented number

Time Complexity: 

- The solution involves a single pass through the digits array, 
starting from the least significant digit and moving to the most significant digit.
- Each iteration performs constant time operations.
- Addition of carry to the current digit.
- Update of the current digit using the modulo operation (total % 10).
- Update of the carry using the division operation (total // 10).
- Worst case, when all digits are 9 ([9, 9, 9]), process all n digits once 
and may also insert an additional digit at the beginning.
- The insertion operation at the start of the array takes linear time, O(n), 
but it occurs only once.
- Summary: The time complexity is O(n), where n is the number of digits in the input array.

Space Complexity: 

- The solution modifies the input array digits in place, without creating additional data structures such as new arrays or lists to store intermediate results.
- A single carry variable is used to handle the increment operation and potential overflow, requiring constant space, O(1).
- The total variable used for calculations during each iteration is also a temporary variable that requires constant space, O(1).
- The only additional space usage occurs in the worst case when inserting a new digit at the beginning of the array. 
- However, this operation modifies the existing array rather than creating a new one.
- Summary: The total space complexity is O(1), since the algorithm uses a fixed amount of additional space regardless of the size of the input array.

Solution: see attached .py file (Python 3)

Revisit? Yes