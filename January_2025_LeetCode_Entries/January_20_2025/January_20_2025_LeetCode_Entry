# LeetCode
LeetCode Solutions and Notes

Day 20 of 2025, this is my LeetCode Journal Entry where I will contribute my notes and solutions for LeetCode problems.

January 20, 2025

LeetCode Problem: Palindrome Number REVISITED
Link: https://leetcode.com/problems/palindrome-number/description/ 

Level: Easy

**Notes:**

Goal: Given an integer x, return true if x is a palindrome, and false otherwise.

- if x is negative, immediately return False
- use a while loop to reverse the digits
- extract the last digit with x % 10
- append it to reversed_number by multiplying the current reversed number by 10 
and adding the last digit
- remove the last digit from x with integer division x //= 10
- if the reversed number matches the original number, it’s a palindrome

Time Complexity:

- The number of digits in the input number x determines the number of
iterations in the while loop.
- If the number x has n digits, the loop runs approximately n times.
- Extracting the last digit using x % 10 takes constant time: O(1).
- Removing the last digit using x //= 10 also takes constant time: O(1).
- The loop runs for about half of the digits when reversing half the number 
or all digits when reversing the full number.
- Summary: If n is the number of digits in x, the overall time complexity is O(n).

Space Complexity:

- The solution uses a few integer variables (x, reversed_number, last_digit, etc.), 
which occupy constant space.
- The solution doesn’t use any additional data structures like arrays, strings, or lists.
- Summary: The space complexity is O(1) (constant space), as the space usage doesn’t scale 
with the input size.

Solution: see attached .py file (Python 3)

Revisit? No
